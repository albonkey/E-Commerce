{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { productListReducer, productInfoReducer, productDeleteReducer, productSaveReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { braintreeReducer } from './reducers/braintreeReducers';\nimport { userSigninReducer, userRegisterReducer, userSignoutReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderListReducer } from './reducers/orderReducers';\nimport Cookie from 'js-cookie';\nimport thunk from 'redux-thunk';\nconst cartItems = Cookie.getJSON('cartItems') || [];\nconst userInfo = Cookie.getJSON('userInfo') || null;\nconst checkoutInfo = Cookie.getJSON('checkoutInfo') || {};\nconst initialState = {\n  cart: {\n    cartItems,\n    checkoutInfo: { ...checkoutInfo\n    },\n    shipping: {\n      type: '',\n      cost: 0\n    }\n  },\n  userSignin: {\n    userInfo\n  }\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productInfo: productInfoReducer,\n  cart: cartReducer,\n  userSignin: userSigninReducer,\n  userRegister: userRegisterReducer,\n  productSave: productSaveReducer,\n  productDelete: productDeleteReducer,\n  clientToken: braintreeReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/Users/carlsolli/Desktop/Projects/Webshop/webshop/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","compose","productListReducer","productInfoReducer","productDeleteReducer","productSaveReducer","cartReducer","braintreeReducer","userSigninReducer","userRegisterReducer","userSignoutReducer","orderCreateReducer","orderListReducer","Cookie","thunk","cartItems","getJSON","userInfo","checkoutInfo","initialState","cart","shipping","type","cost","userSignin","reducer","productList","productInfo","userRegister","productSave","productDelete","clientToken","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,EAAiDC,oBAAjD,EAAuEC,kBAAvE,QAAiG,4BAAjG;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,EAAiDC,kBAAjD,QAA2E,yBAA3E;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,QAAqD,0BAArD;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,OAAP,CAAe,WAAf,KAA+B,EAAjD;AACA,MAAMC,QAAQ,GAAGJ,MAAM,CAACG,OAAP,CAAe,UAAf,KAA8B,IAA/C;AACA,MAAME,YAAY,GAAGL,MAAM,CAACG,OAAP,CAAe,cAAf,KAAkC,EAAvD;AAEA,MAAMG,YAAY,GAAG;AAACC,EAAAA,IAAI,EAAE;AAAEL,IAAAA,SAAF;AAAaG,IAAAA,YAAY,EAAE,EAAC,GAAGA;AAAJ,KAA3B;AAA8CG,IAAAA,QAAQ,EAAE;AAACC,MAAAA,IAAI,EAAE,EAAP;AAAWC,MAAAA,IAAI,EAAE;AAAjB;AAAxD,GAAP;AAAsFC,EAAAA,UAAU,EAAE;AAACP,IAAAA;AAAD;AAAlG,CAArB;AAEA,MAAMQ,OAAO,GAAG1B,eAAe,CAAC;AAC9B2B,EAAAA,WAAW,EAAExB,kBADiB;AAE9ByB,EAAAA,WAAW,EAAExB,kBAFiB;AAG9BiB,EAAAA,IAAI,EAAGd,WAHuB;AAI9BkB,EAAAA,UAAU,EAAEhB,iBAJkB;AAK9BoB,EAAAA,YAAY,EAAEnB,mBALgB;AAM9BoB,EAAAA,WAAW,EAAExB,kBANiB;AAO9ByB,EAAAA,aAAa,EAAE1B,oBAPe;AAQ9B2B,EAAAA,WAAW,EAAExB;AARiB,CAAD,CAA/B;AAWA,MAAMyB,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+CjC,OAAvE;AACA,MAAMkC,KAAK,GAAGrC,WAAW,CAAC2B,OAAD,EAAUN,YAAV,EAAwBa,eAAe,CAAChC,eAAe,CAACc,KAAD,CAAhB,CAAvC,CAAzB;AAEA,eAAeqB,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { productListReducer, productInfoReducer, productDeleteReducer, productSaveReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { braintreeReducer } from './reducers/braintreeReducers';\nimport { userSigninReducer, userRegisterReducer, userSignoutReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderListReducer } from './reducers/orderReducers';\nimport Cookie from 'js-cookie';\nimport thunk from 'redux-thunk';\n\nconst cartItems = Cookie.getJSON('cartItems') || [];\nconst userInfo = Cookie.getJSON('userInfo') || null;\nconst checkoutInfo = Cookie.getJSON('checkoutInfo') || {};\n\nconst initialState = {cart: { cartItems, checkoutInfo: {...checkoutInfo}, shipping: {type: '', cost: 0} }, userSignin: {userInfo}};\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productInfo: productInfoReducer,\n  cart:  cartReducer,\n  userSignin: userSigninReducer,\n  userRegister: userRegisterReducer,\n  productSave: productSaveReducer,\n  productDelete: productDeleteReducer,\n  clientToken: braintreeReducer\n});\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}