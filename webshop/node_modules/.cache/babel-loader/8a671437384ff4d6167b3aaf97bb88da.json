{"ast":null,"code":"import { CART_ADD_ITEM } from '../constants/cartConstants';\n\nconst cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const product = state.cartItems.find(x => x._id === item._id);\n\n      if (product) {\n        return {\n          cartItems: state.cartItems.map(x => x._id === product._id ? item : x)\n        };\n      }\n\n      return {\n        cartItems: [...state.cartItems, item]\n      };\n\n    case CART_REMOVE_ITEM:\n      return {\n        cartItems: state.cartItems.filter(x => x._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport { cartReducer };","map":{"version":3,"sources":["/Users/carlsolli/Desktop/Projects/Webshop/webshop/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","cartReducer","state","cartItems","action","type","item","payload","product","find","x","_id","map","CART_REMOVE_ITEM","filter"],"mappings":"AAAA,SAASA,aAAT,QAA8B,4BAA9B;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAC;AAACC,EAAAA,SAAS,EAAE;AAAZ,CAAP,EAAwBC,MAAxB,KAAmC;AACrD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKL,aAAL;AACE,YAAMM,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,OAAO,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUL,IAAI,CAACK,GAAzC,CAAhB;;AAEA,UAAGH,OAAH,EAAW;AACT,eAAO;AAAEL,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAoBF,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUH,OAAO,CAACG,GAAlB,GAAwBL,IAAxB,GAA+BI,CAAxD;AAAb,SAAP;AACD;;AACD,aAAO;AAAEP,QAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAAb,OAAP;;AACF,SAAKO,gBAAL;AACE,aAAO;AAAEV,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBW,MAAhB,CAAuBJ,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUP,MAAM,CAACG,OAA7C;AAAb,OAAP;;AAEF;AACE,aAAOL,KAAP;AAbJ;AAeD,CAhBD;;AAkBA,SAASD,WAAT","sourcesContent":["import { CART_ADD_ITEM } from '../constants/cartConstants';\n\nconst cartReducer = (state={cartItems: []}, action) => {\n  switch(action.type){\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const product = state.cartItems.find(x => x._id === item._id);\n\n      if(product){\n        return { cartItems: state.cartItems.map(x => x._id === product._id ? item : x)};\n      }\n      return { cartItems: [...state.cartItems, item]};\n    case CART_REMOVE_ITEM:\n      return { cartItems: state.cartItems.filter(x => x._id !== action.payload)};\n\n    default:\n      return state;\n  }\n}\n\nexport { cartReducer }\n"]},"metadata":{},"sourceType":"module"}