{"ast":null,"code":"import axios from 'axios';\nimport Cookie from 'js-cookie';\nimport { USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL, USER_LOGOUT } from '../constants/userConstants';\n\nconst signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst logout = () => {\n  dispatch({\n    type: USER_LOGOUT,\n    payload: {}\n  });\n  Cookie.set('userInfo', null);\n};\n\nexport { signin, register };","map":{"version":3,"sources":["/Users/carlsolli/Desktop/Projects/Webshop/webshop/src/actions/userActions.js"],"names":["axios","Cookie","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","USER_LOGOUT","signin","email","password","dispatch","type","payload","data","post","set","JSON","stringify","error","message","register","name","logout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,qBAAT,EAAgCC,qBAAhC,EAAuDC,kBAAvD,EACUC,mBADV,EAC+BC,mBAD/B,EACoDC,gBADpD,EAEUC,WAFV,QAE4B,4BAF5B;;AAIA,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AACtDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAER,mBAAP;AAA4BS,IAAAA,OAAO,EAAE;AAACJ,MAAAA,KAAD;AAAQC,MAAAA;AAAR;AAArC,GAAD,CAAR;;AAEA,MAAG;AACD,UAAM;AAACI,MAAAA;AAAD,QAAS,MAAMf,KAAK,CAACgB,IAAN,CAAW,mBAAX,EAAgC;AAACN,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAhC,CAArB;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEP,mBAAP;AAA4BQ,MAAAA,OAAO,EAAEC;AAArC,KAAD,CAAR;AACAd,IAAAA,MAAM,CAACgB,GAAP,CAAW,UAAX,EAAuBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAvB;AACD,GAJD,CAIE,OAAOK,KAAP,EAAc;AACdR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,gBAAR;AAA0BO,MAAAA,OAAO,EAAEM,KAAK,CAACC;AAAzC,KAAD,CAAR;AACD;AACF,CAVD;;AAaA,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOb,KAAP,EAAcC,QAAd,KAA2B,MAAOC,QAAP,IAAoB;AAC9DA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEX,qBAAP;AAA8BY,IAAAA,OAAO,EAAE;AAACS,MAAAA,IAAD;AAAOb,MAAAA,KAAP;AAAcC,MAAAA;AAAd;AAAvC,GAAD,CAAR;;AAEA,MAAG;AACD,UAAM;AAACI,MAAAA;AAAD,QAAS,MAAMf,KAAK,CAACgB,IAAN,CAAW,qBAAX,EAAkC;AAACO,MAAAA,IAAD;AAAOb,MAAAA,KAAP;AAAcC,MAAAA;AAAd,KAAlC,CAArB;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEV,qBAAP;AAA8BW,MAAAA,OAAO,EAAEC;AAAvC,KAAD,CAAR;AACAd,IAAAA,MAAM,CAACgB,GAAP,CAAW,UAAX,EAAuBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAvB;AACD,GAJD,CAIE,OAAMK,KAAN,EAAY;AACZR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAET,kBAAP;AAA2BU,MAAAA,OAAO,EAAEM,KAAK,CAACC;AAA1C,KAAD,CAAR;AACD;AACF,CAVD;;AAYA,MAAMG,MAAM,GAAG,MAAM;AACnBZ,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEL,WAAP;AAAoBM,IAAAA,OAAO,EAAE;AAA7B,GAAD,CAAR;AACAb,EAAAA,MAAM,CAACgB,GAAP,CAAW,UAAX,EAAuB,IAAvB;AACD,CAHD;;AAIA,SAASR,MAAT,EAAiBa,QAAjB","sourcesContent":["import axios from 'axios';\nimport Cookie from 'js-cookie';\nimport { USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL,\n          USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL,\n          USER_LOGOUT} from '../constants/userConstants';\n\nconst signin = (email, password) => async (dispatch) => {\n  dispatch({type: USER_SIGNIN_REQUEST, payload: {email, password }});\n\n  try{\n    const {data} = await axios.post('/api/users/signin', {email, password});\n    dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({ type: USER_SIGNIN_FAIL, payload: error.message});\n  }\n}\n\n\nconst register = (name, email, password) => async (dispatch) => {\n  dispatch({type: USER_REGISTER_REQUEST, payload: {name, email, password}});\n\n  try{\n    const {data} = await axios.post('/api/users/register', {name, email, password});\n    dispatch({type: USER_REGISTER_SUCCESS, payload: data});\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch(error){\n    dispatch({type: USER_REGISTER_FAIL, payload: error.message});\n  }\n}\n\nconst logout = () => {\n  dispatch({type: USER_LOGOUT, payload: {}});\n  Cookie.set('userInfo', null);\n}\nexport { signin, register };\n"]},"metadata":{},"sourceType":"module"}