{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_INFO_REQUEST, PRODUCT_INFO_SUCCESS, PRODUCT_INFO_FAIL } from '../constants/productConstants';\nimport axios from 'axios';\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products');\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst infoProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_INFO_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products/' + productId);\n    dispatch({\n      type: PRODUCT_INFO_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_INFO_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deleteProduct = productId => async dispatch => {\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.delete('/api/products/' + productId, {\n      headers: {\n        'Authorization': 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, infoProduct, deleteProduct };","map":{"version":3,"sources":["/Users/carlsolli/Desktop/Projects/Webshop/webshop/src/actions/productActions.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_INFO_REQUEST","PRODUCT_INFO_SUCCESS","PRODUCT_INFO_FAIL","axios","listProducts","dispatch","type","data","get","payload","error","message","infoProduct","productId","deleteProduct","userSignin","userInfo","getState","PRODUCT_DELETE_REQUEST","delete","headers","token","PRODUCT_DELETE_SUCCESS","success","PRODUCT_DELETE_FAIL"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,oBAA/B,EAAqDC,iBAArD,EACUC,oBADV,EACgCC,oBADhC,EACsDC,iBADtD,QAC8E,+BAD9E;AAGA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC7C,MAAG;AACDA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACA,UAAM;AAAEU,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACK,GAAN,CAAU,eAAV,CAAvB;AACAH,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAER,oBAAP;AAA6BW,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAR;AACD,GAJD,CAKA,OAAMG,KAAN,EAAY;AACVL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,iBAAR;AAA2BU,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA1C,KAAD,CAAR;AACD;AACF,CATD;;AAWA,MAAMC,WAAW,GAAIC,SAAD,IAAe,MAAOR,QAAP,IAAoB;AACrD,MAAG;AACDA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN;AAAP,KAAD,CAAR;AACA,UAAM;AAAEO,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACK,GAAN,CAAU,mBAAmBK,SAA7B,CAAvB;AACAR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEL,oBAAP;AAA6BQ,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAR;AACD,GAJD,CAIE,OAAMG,KAAN,EAAY;AACZL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEJ,iBAAP;AAA0BO,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAAzC,KAAD,CAAR;AACD;AACF,CARD;;AAUA,MAAMG,aAAa,GAAID,SAAD,IAAe,MAAOR,QAAP,IAAoB;AACvD,MAAG;AACD,UAAM;AAAEU,MAAAA,UAAU,EAAE;AAAEC,QAAAA;AAAF;AAAd,QAA+BC,QAAQ,EAA7C;AACAZ,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEY,sBAAP;AAA+BT,MAAAA,OAAO,EAAEI;AAAxC,KAAD,CAAR;AACA,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACgB,MAAN,CAAa,mBAAmBN,SAAhC,EAA2C;AAChEO,MAAAA,OAAO,EAAE;AACP,yBAAiB,YAAYJ,QAAQ,CAACK;AAD/B;AADuD,KAA3C,CAAvB;AAKAhB,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEgB,sBAAP;AAA+Bb,MAAAA,OAAO,EAAEF,IAAxC;AAA8CgB,MAAAA,OAAO,EAAE;AAAvD,KAAD,CAAR;AACD,GATD,CASE,OAAOb,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEkB,mBAAP;AAA4Bf,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA3C,KAAD,CAAR;AACD;AACF,CAbD;;AAcA,SAASP,YAAT,EAAuBQ,WAAvB,EAAoCE,aAApC","sourcesContent":["import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL,\n          PRODUCT_INFO_REQUEST, PRODUCT_INFO_SUCCESS, PRODUCT_INFO_FAIL} from '../constants/productConstants';\n\nimport axios from 'axios';\n\nconst listProducts = () => async (dispatch) => {\n  try{\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n    const { data } = await axios.get('/api/products');\n    dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\n  }\n  catch(error){\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\n  }\n}\n\nconst infoProduct = (productId) => async (dispatch) => {\n  try{\n    dispatch({type: PRODUCT_INFO_REQUEST});\n    const { data } = await axios.get('/api/products/' + productId);\n    dispatch({type: PRODUCT_INFO_SUCCESS, payload: data});\n  } catch(error){\n    dispatch({type: PRODUCT_INFO_FAIL, payload: error.message});\n  }\n}\n\nconst deleteProduct = (productId) => async (dispatch) => {\n  try{\n    const { userSignin: { userInfo } } = getState();\n    dispatch({type: PRODUCT_DELETE_REQUEST, payload: productId});\n    const { data } = await axios.delete('/api/products/' + productId, {\n      headers: {\n        'Authorization': 'Bearer ' + userInfo.token\n      }\n    })\n    dispatch({type: PRODUCT_DELETE_SUCCESS, payload: data, success: true});\n  } catch (error) {\n    dispatch({type: PRODUCT_DELETE_FAIL, payload: error.message});\n  }\n}\nexport { listProducts, infoProduct, deleteProduct };\n"]},"metadata":{},"sourceType":"module"}