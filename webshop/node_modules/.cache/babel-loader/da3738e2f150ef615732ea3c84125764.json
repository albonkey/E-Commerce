{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_INFO_REQUEST, PRODUCT_INFO_SUCCESS, PRODUCT_INFO_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL } from '../constants/productConstants';\nimport axios from 'axios';\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products');\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst infoProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_INFO_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products/' + productId);\n    dispatch({\n      type: PRODUCT_INFO_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_INFO_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    console.log(product.get('id'));\n\n    if (!product.get('id')) {\n      const {\n        data\n      } = await axios.post('/api/products', product, {\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await axios.put('/api/products/' + product.get('id'), product, {\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n/*\nconst saveProduct = (product) => async (dispatch, getState) => {\n  try{\n    dispatch({type: PRODUCT_SAVE_REQUEST, payload: product });\n    const {userSignin: { userInfo }} = getState();\n    if(!product._id){\n      const { data } = await axios.post('/api/products', product, {\n        headers: {\n          'Authorization': 'Bearer ' + userInfo.token\n        }\n      })\n      dispatch({type: PRODUCT_SAVE_SUCCESS, payload: data});\n    } else {\n      const { data } = await axios.put('/api/products/' + product._id, product, {\n        headers: {\n          'Authorization': 'Bearer ' + userInfo.token\n        }\n      })\n        dispatch({type: PRODUCT_SAVE_SUCCESS, payload: data});\n    }\n  } catch(error){\n    dispatch({ type: PRODUCT_SAVE_FAIL, payload: error.message});\n  }\n}\n*/\n\n\nconst deleteProduct = productId => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.delete('/api/products/' + productId, {\n      headers: {\n        'Authorization': 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, infoProduct, deleteProduct, saveProduct };","map":{"version":3,"sources":["/Users/carlsolli/Desktop/Projects/Webshop/webshop/src/actions/productActions.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_INFO_REQUEST","PRODUCT_INFO_SUCCESS","PRODUCT_INFO_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","axios","listProducts","dispatch","type","data","get","payload","error","message","infoProduct","productId","saveProduct","product","getState","userSignin","userInfo","console","log","post","headers","token","put","deleteProduct","delete","success"],"mappings":"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","sourcesContent":["import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL,\n          PRODUCT_INFO_REQUEST, PRODUCT_INFO_SUCCESS, PRODUCT_INFO_FAIL,\n          PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL,\n          PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL } from '../constants/productConstants';\nimport axios from 'axios';\n\n\nconst listProducts = () => async (dispatch) => {\n  try{\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n    const { data } = await axios.get('/api/products');\n    dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\n  }\n  catch(error){\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\n  }\n}\n\nconst infoProduct = (productId) => async (dispatch) => {\n  try{\n    dispatch({type: PRODUCT_INFO_REQUEST});\n    const { data } = await axios.get('/api/products/' + productId);\n    dispatch({type: PRODUCT_INFO_SUCCESS, payload: data});\n  } catch(error){\n    dispatch({type: PRODUCT_INFO_FAIL, payload: error.message});\n  }\n}\n\nconst saveProduct = (product) => async (dispatch, getState) => {\n  try{\n    dispatch({type: PRODUCT_SAVE_REQUEST, payload: product });\n    const {userSignin: { userInfo }} = getState();\n    console.log(product.get('id'));\n    if(!product.get('id')){\n      const { data } = await axios.post('/api/products', product, {\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Bearer ' + userInfo.token\n        }\n      })\n      dispatch({type: PRODUCT_SAVE_SUCCESS, payload: data});\n    } else {\n      const { data } = await axios.put('/api/products/' + product.get('id'), product, {\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Bearer ' + userInfo.token\n        }\n      })\n        dispatch({type: PRODUCT_SAVE_SUCCESS, payload: data});\n    }\n  } catch(error){\n    dispatch({ type: PRODUCT_SAVE_FAIL, payload: error.message});\n  }\n}\n/*\nconst saveProduct = (product) => async (dispatch, getState) => {\n  try{\n    dispatch({type: PRODUCT_SAVE_REQUEST, payload: product });\n    const {userSignin: { userInfo }} = getState();\n    if(!product._id){\n      const { data } = await axios.post('/api/products', product, {\n        headers: {\n          'Authorization': 'Bearer ' + userInfo.token\n        }\n      })\n      dispatch({type: PRODUCT_SAVE_SUCCESS, payload: data});\n    } else {\n      const { data } = await axios.put('/api/products/' + product._id, product, {\n        headers: {\n          'Authorization': 'Bearer ' + userInfo.token\n        }\n      })\n        dispatch({type: PRODUCT_SAVE_SUCCESS, payload: data});\n    }\n  } catch(error){\n    dispatch({ type: PRODUCT_SAVE_FAIL, payload: error.message});\n  }\n}\n*/\n\nconst deleteProduct = (productId) => async (dispatch, getState) => {\n  try{\n    const { userSignin: { userInfo } } = getState();\n    dispatch({type: PRODUCT_DELETE_REQUEST, payload: productId});\n    const { data } = await axios.delete('/api/products/' + productId, {\n      headers: {\n        'Authorization': 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({type: PRODUCT_DELETE_SUCCESS, payload: data, success: true});\n  } catch (error) {\n    dispatch({type: PRODUCT_DELETE_FAIL, payload: error.message});\n  }\n}\nexport { listProducts, infoProduct, deleteProduct, saveProduct };\n"]},"metadata":{},"sourceType":"module"}