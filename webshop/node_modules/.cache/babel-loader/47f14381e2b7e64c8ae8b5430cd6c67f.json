{"ast":null,"code":"var _jsxFileName = \"/Users/carlsolli/Desktop/Projects/Webshop/webshop/src/components/PaymentOptions/PaymentOptions.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getBraintreeClientToken, processPayment } from '../../actions/braintreeActions';\nimport { emptyCart } from '../../actions/cartActions';\nimport DropIn from \"braintree-web-drop-in-react\";\nimport './PaymentOptions.css';\n\nconst PaymentOptions = ({\n  reRoute,\n  total\n}) => {\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const clientToken = useSelector(state => state.clientToken);\n  const {\n    email,\n    state,\n    country,\n    city,\n    address,\n    postalCode\n  } = cart.checkoutInfo;\n  const [data, setData] = useState({\n    success: false,\n    clientToken: null,\n    error: '',\n    instance: {},\n    address: ''\n  });\n  useEffect(() => {\n    dispatch(getBraintreeClientToken());\n    setData({ ...data,\n      clientToken: clientToken.clientToken,\n      success: true\n    });\n  }, []);\n\n  const buy = () => {\n    let nonce;\n    let getNonce = data.instance.requestPaymentMethod().then(data => {\n      nonce = data.nonce;\n      const paymentData = {\n        paymentMethodNonce: nonce,\n        amount: 100\n      };\n\n      if (processPayment(paymentData)) {\n        setData({ ...data,\n          success: true\n        });\n        dispatch(emptyCart());\n      }\n      /*.then(response => {\n         emptyCart(() => {\n          console.log('Payment Success. Empty Cart');\n        })\n      }); */\n\n    }).catch(error => {\n      console.log('Drop In Error, ', error);\n      setData({ ...data,\n        error: error.message\n      });\n    });\n  };\n\n  const showDropIn = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, data.clientToken !== null && cart.cartItems.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DropIn, {\n      options: {\n        authorization: data.clientToken\n      },\n      onInstance: instance => data.instance = instance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: buy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"Pay\")) : null);\n  };\n\n  const showSuccess = success => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, success);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"Total: $\", total), showDropIn());\n};\n\nexport default PaymentOptions;","map":{"version":3,"sources":["/Users/carlsolli/Desktop/Projects/Webshop/webshop/src/components/PaymentOptions/PaymentOptions.js"],"names":["React","useState","useEffect","Link","useSelector","useDispatch","getBraintreeClientToken","processPayment","emptyCart","DropIn","PaymentOptions","reRoute","total","dispatch","cart","state","clientToken","email","country","city","address","postalCode","checkoutInfo","data","setData","success","error","instance","buy","nonce","getNonce","requestPaymentMethod","then","paymentData","paymentMethodNonce","amount","catch","console","log","message","showDropIn","cartItems","length","authorization","showSuccess"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {Link} from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getBraintreeClientToken, processPayment } from '../../actions/braintreeActions';\nimport { emptyCart } from '../../actions/cartActions';\nimport DropIn from \"braintree-web-drop-in-react\";\nimport './PaymentOptions.css';\n\nconst PaymentOptions = ({reRoute, total}) => {\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const clientToken = useSelector(state => state.clientToken);\n  const { email, state, country, city, address, postalCode } = cart.checkoutInfo;\n  \n  const [data, setData] = useState({\n    success: false,\n    clientToken: null,\n    error: '',\n    instance: {},\n    address: ''\n  })\n\n\n  useEffect(() => {\n    dispatch(getBraintreeClientToken())\n    setData({...data, clientToken: clientToken.clientToken, success: true})\n  },[])\n\n  const buy = () => {\n    let nonce;\n    let getNonce = data.instance.requestPaymentMethod()\n    .then(data => {\n      nonce = data.nonce;\n\n      const paymentData = {\n        paymentMethodNonce: nonce,\n        amount: 100\n      }\n\n      if(processPayment(paymentData)){\n        setData({...data, success: true})\n        dispatch(emptyCart());\n      }\n\n      /*.then(response => {\n\n        emptyCart(() => {\n          console.log('Payment Success. Empty Cart');\n        })\n      }); */\n\n    }).catch(error => {\n      console.log('Drop In Error, ', error);\n      setData({...data, error: error.message });\n    })\n  }\n\n  const showDropIn = () => {\n    return (\n      <div>\n        { data.clientToken !== null && cart.cartItems.length > 0 ? (\n          <div>\n            <DropIn\n              options={{ authorization: data.clientToken }}\n              onInstance={(instance) => (data.instance = instance)}\n            />\n            <button onClick={buy}>Pay</button>\n          </div>\n        ) : null }\n      </div>\n    )\n  }\n\n  const showSuccess = success => (\n    <div>\n      {success}\n    </div>\n  )\n\n  return(\n    <div>\n      <h2>Total: ${total}</h2>\n      {showDropIn()}\n    </div>\n\n  )\n}\n\nexport default PaymentOptions;\n"]},"metadata":{},"sourceType":"module"}